substitutions:
  name: "voice-assistant"
  friendly_name: "Asistente de Voz"
  # Fases del asistente
  voice_assist_idle_phase_id: '1'
  voice_assist_waiting_for_command_phase_id: '2'
  voice_assist_listening_for_command_phase_id: '3'
  voice_assist_thinking_phase_id: '4'
  voice_assist_replying_phase_id: '5'
  voice_assist_not_ready_phase_id: '10'
  voice_assist_error_phase_id: '11'

esphome:
  name: "${name}"
  friendly_name: "${friendly_name}"
  platform: ESP32
  board: esp32-s3-devkitc-1

esp32:
  variant: esp32s3
  flash_size: 16MB  # Tamaño de flash especificado
  framework:
    type: esp-idf
    sdkconfig_options:
      CONFIG_ESP32S3_DEFAULT_CPU_FREQ_240: "y"
      CONFIG_SPIRAM: "y"  # Habilita PSRAM
      CONFIG_SPIRAM_MODE_OCT: "y"  # Modo Octal PSRAM
      CONFIG_SPIRAM_SPEED_80M: "y"  # Velocidad PSRAM 80MHz
      CONFIG_SPIRAM_ALLOW_STACK_EXTERNAL_MEMORY: "y"  # Permite stack en PSRAM

# Configuración PSRAM (adicional a flash_size)
psram:
  mode: octal
  speed: 80MHz

# Configuración de audio (INMP441 + MAX98357)
i2s_audio:
  id: audio_bus
  i2s_lrclk_pin: GPIO35  # INMP441 LRC
  i2s_bclk_pin: GPIO36   # INMP441 BCK
  i2s_din_pin: GPIO37    # INMP441 DOUT
  i2s_dout_pin: GPIO16   # MAX98357 DIN
  mode: master
  bits_per_sample: 16

microphone:
  - platform: i2s_audio
    id: inmp441_mic
    i2s_audio_id: audio_bus
    adc_type: external
    pdm: false
    sample_rate: 16000

speaker:
  - platform: i2s_audio
    id: max98357_speaker
    i2s_audio_id: audio_bus
    mode: mono

# Configuración microWakeWord (modelos predefinidos)
micro_wake_word:
  id: wake_detector
  microphone: inmp441_mic
  models:
    - model: hey_jarvis
      id: hey_jarvis
      sensitivity: 0.9
    - model: okay_nabu
      id: okay_nabu
      sensitivity: 0.85
    - model: hey_mycroft
      id: hey_mycroft
      sensitivity: 0.88
  on_wake_word_detected:
    then:
      - voice_assistant.start: ha_assistant
      - light.turn_on:
          id: status_leds
          effect: "${id(wake_detector).get_wake_word_id()}_effect"

# LEDs WS2812B (3 LEDs)
light:
  - platform: fastled_clockless
    id: status_leds
    chipset: WS2812B
    pin: GPIO38
    num_leds: 3
    rgb_order: GRB
    effects:
      - pulse:
          id: hey_jarvis_effect
          name: "Efecto Jarvis"
          colors: [ [0, 100, 100] ]  # Cyan
      - pulse:
          id: okay_nabu_effect
          name: "Efecto Nabu"
          colors: [ [100, 0, 100] ]  # Magenta
      - pulse:
          id: hey_mycroft_effect
          name: "Efecto Mycroft"
          colors: [ [100, 100, 0] ]  # Amarillo
      - lambda:
          id: listening_effect
          name: "Escuchando"
          update_interval: 0.2s
          lambda: |-
            static float offset = 0.0;
            offset += 0.3;
            for (int i = 0; i < id(status_leds).size(); i++) {
              float pos = (offset + (i * 2.0944)) / (3.14159*2);
              id(status_leds)[i] = esp8266::Color::ColorHSV(pos, 1.0, 0.7);
            }

# Botón físico (GPIO0)
binary_sensor:
  - platform: gpio
    id: physical_button
    pin:
      number: GPIO0
      mode: INPUT_PULLUP
    on_multi_click:
      - timing:
          - ON for at most 1s
          - OFF for at least 0.25s
        then:
          - voice_assistant.start: ha_assistant
      - timing:
          - ON for at least 5s
        then:
          - logger.log: "Reinicio iniciado"
          - delay: 1s
          - restart: hard

# Asistente de voz
voice_assistant:
  - platform: home_assistant
    id: ha_assistant
    microphone: inmp441_mic
    speaker: max98357_speaker
    use_wake_word: false
    on_listening:
      then:
        - light.turn_on:
            id: status_leds
            effect: "Escuchando"
    on_error:
      then:
        - light.turn_on:
            id: status_leds
            red: 100%
            green: 0%
            blue: 0%
            flash: 0.5s

# Configuración de red y API
wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  ap:
    ssid: "${friendly_name} Fallback"
    password: !secret fallback_password

api:
  encryption:
    key: !secret api_encryption_key

ota:
  password: !secret ota_password

logger:
  level: DEBUG
